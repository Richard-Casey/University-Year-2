<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="_resource_manager_8cpp" kind="file" language="C++">
    <compoundname>ResourceManager.cpp</compoundname>
    <includes refid="_resource_manager_8h" local="yes">ResourceManager.h</includes>
    <includes local="no">iostream</includes>
    <incdepgraph>
      <node id="1">
        <label>ResourceManager.cpp</label>
        <link refid="_resource_manager_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>ResourceManager.h</label>
        <link refid="_resource_manager_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>SDL.h</label>
      </node>
      <node id="6">
        <label>iostream</label>
      </node>
      <node id="3">
        <label>string</label>
      </node>
      <node id="4">
        <label>unordered_map</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_resource_manager_8h" kindref="compound">ResourceManager.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal">ResourceManager::ResourceManager()</highlight></codeline>
<codeline lineno="8"><highlight class="normal">{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal">ResourceManager::ResourceManager(<ref refid="class_resource_manager" kindref="compound">ResourceManager</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;)</highlight></codeline>
<codeline lineno="17"><highlight class="normal">{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><ref refid="class_resource_manager" kindref="compound">ResourceManager</ref><sp/>ResourceManager::operator<sp/>=<sp/>(<ref refid="class_resource_manager" kindref="compound">ResourceManager</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>rhs)</highlight></codeline>
<codeline lineno="27"><highlight class="normal">{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//TODO<sp/>although<sp/>we<sp/>do<sp/>NOT<sp/>need<sp/>this<sp/>for<sp/>a<sp/>singleton</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="30"><highlight class="normal">}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Instantiate<sp/>exactly<sp/>one<sp/>instance<sp/>of<sp/>our<sp/>class</highlight></codeline>
<codeline lineno="37" refid="class_resource_manager_1a98b11a6302bf0db4ffc81eea70512ee2" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><ref refid="class_resource_manager" kindref="compound">ResourceManager</ref>&amp;<sp/><ref refid="class_resource_manager_1a98b11a6302bf0db4ffc81eea70512ee2" kindref="member">ResourceManager::GetInstance</ref>()</highlight></codeline>
<codeline lineno="38"><highlight class="normal">{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*<ref refid="class_resource_manager_1a24f6a69b540daf3c370a41c81a4d2269" kindref="member">s_instance</ref>;</highlight></codeline>
<codeline lineno="40"><highlight class="normal">}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="class_resource_manager_1a31d758ae7d5a972154ccc7dae2144166" refkind="member"><highlight class="normal">SDL_Surface*<sp/><ref refid="class_resource_manager_1a31d758ae7d5a972154ccc7dae2144166" kindref="member">ResourceManager::GetSurface</ref>(std::string<sp/>filepath)</highlight></codeline>
<codeline lineno="48"><highlight class="normal">{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>will<sp/>look<sp/>through<sp/>our<sp/>m_durfaces<sp/>which<sp/>is<sp/>an<sp/>unordered<sp/>map<sp/>and<sp/>see<sp/>if<sp/>a<sp/>file<sp/>exists</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>And<sp/>if<sp/>the<sp/>file<sp/>does<sp/>exist<sp/>then<sp/>return<sp/>the<sp/>associeated<sp/>surface.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>search<sp/>=<sp/>m_Surfaces.find(filepath);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(search<sp/>==<sp/>m_Surfaces.end())</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Image<sp/>allocated<sp/>once&quot;</highlight><highlight class="normal"><sp/>+<sp/>filepath<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SDL_Surface*<sp/>surface<sp/>=<sp/>SDL_LoadBMP(filepath.c_str());</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_Surfaces.insert(std::make_pair(filepath,<sp/>surface));</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_Surfaces[filepath];</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal">}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><ref refid="class_resource_manager" kindref="compound">ResourceManager</ref>*<sp/><ref refid="class_resource_manager_1a24f6a69b540daf3c370a41c81a4d2269" kindref="member">ResourceManager::s_instance</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_resource_manager" kindref="compound">ResourceManager</ref>();</highlight></codeline>
    </programlisting>
    <location file="ResourceManager.cpp"/>
  </compounddef>
</doxygen>
